// V_COMMIT_HASH 2943bdc
// V_CURRENT_COMMIT_HASH ad5deef
// Generated by the V compiler

"use strict";

/** @namespace builtin */
const builtin = (function () {
	/**
	 * @function
	 * @param {any} s
	 * @returns {void}
	*/
	function println(s) {
		console.log(s);
	}
	
	/**
	 * @function
	 * @param {any} s
	 * @returns {void}
	*/
	function print(s) {
		process.stdout.write(s);
	}

	/* module exports */
	return {
		println,
		print,
	};
})();

/** @namespace main */
const main = (function () {
	/**
	 * @constructor
	 * @param {{value?: number, test?: Map<string, number>, hello?: number[]}} init
	*/
	function Int({ value = 0, test = new Map(), hello = [] }) {
		this.value = value
		this.test = test
		this.hello = hello
	};
	Int.prototype = {
		/** @type {number} */
		value: 0,
		/** @type {Map<string, number>} */
		test: new Map(),
		/** @type {number[]} */
		hello: [],
		/**
		 * @function
		 * @param {number} value
		 * @returns {void}
		*/
		add(value) {
			const i = this;
			i.value += value;
		},
		/**
		 * @function
		 * @returns {number}
		*/
		get() {
			const i = this;
			return i.value;
		}
	};

	
	
	/**
	 * @constructor
	 * @param {{foo?: number, bar?: string}} init
	*/
	function Config({ foo = 0, bar = "" }) {
		this.foo = foo
		this.bar = bar
	};
	Config.prototype = {
		/** @type {number} */
		foo: 0,
		/** @type {string} */
		bar: ""
	};

	/**
	 * @function
	 * @param {Config} c
	 * @returns {void}
	*/
	function use_config(c) {
	}
	
	/* program entry point */
	(function() {
		/** @type {Int} */
		const a = new Int({
			value: 10
		});
		a.add(5);
		builtin.println(a);
		/** @type {Int} */
		const b = new Int({});
		b.add(10);
		builtin.println(b.get());
		use_config(new Config({
			foo: 2,
			bar: "bar"
		}));
		use_config(new Config({
			foo: 2,
			bar: "bar"
		}));
	})();

	/* module exports */
	return {};
})();


