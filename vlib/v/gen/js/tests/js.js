// V_COMMIT_HASH 83289d7
// V_CURRENT_COMMIT_HASH fc7e64b

// Generated by the V compiler
"use strict";

const CONSTANTS = Object.freeze({
	/** @type {number} - i_am_a_const */
	i_am_a_const: 21214
});

class Companies {
	/**
	* @param {{google: number, amazon: boolean, yahoo: string}} values - values for this class fields
	* @constructor
	*/
	constructor(values) {
		this.google = values.google
		this.amazon = values.amazon
		this.yahoo = values.yahoo
	}
	
	/**
	* @return {number}
	*/
	method() {
		const it = this;
		const ss = new Companies({
			google: 2, 
			amazon: true, 
			yahoo: "hello"
		});
		/** @type {[number, number]} */
		const [a, b] = hello(2, "google", "not google");
		/** @type {string} - glue */
		const glue = (a > 2 ? "more_glue" : a > 5 ? "more glueee" : "less glue");
		if (a !== 2) {
		}
		
		return 0;
	}
	
}
const POSITION = Object.freeze({
	GO_BACK: 0,
	DONT_GO_BACK: 1,
});

/* program entry point */
(async function() {
	/** @type {string} - v */
	const v = "done";
	{
		/** @type {string} - _ */
		const _ = "block";
	}
	
	/** @type {number} - pos */
	const pos = POSITION.GO_BACK;
	/** @type {number} - dun */
	const dun = CONSTANTS.i_am_a_const * 20;
	for (let i = 0; i < 10; i++) {
	}
	
	for (let i = 0; i < "hello".length; ++i) {
		let x = "hello"[i];
	}
	
	for (let x = 1; x < 10; ++x) {
	}
	
	/** @type {number[]} - arr */
	const arr = [1, 2, 3, 4, 5];
	for (let tmp1 = 0; tmp1 < arr.length; ++tmp1) {
		let a = arr[tmp1];
	}
	
	/** @type {Map<string, string>} - ma */
	const ma = new Map([
		["str", "done"],
		["ddo", "baba"]
	]);
	for (let [m, n] of ma) {
		/** @type {string} - iss */
		const iss = m;
	}
	
	await new Promise(function(resolve){
		async(0, "hello");
		resolve();
	});
	
})();


/**
* @param {number} num
* @param {string} def
* @return {void}
*/
function async(num, def) {
}


/* [inline] */
/**
* @param {number} game_on
* @param {...string} dummy
* @return {multi_return_int_int}
*/
function hello(game_on, ...dummy) {
	for (let tmp2 = 0; tmp2 < dummy.length; ++tmp2) {
		let dd = dummy[tmp2];
		/** @type {string} - l */
		const l = dd;
	}
	
	(function defer() {
		/** @type {string} - do */
		const do = "not";
	})();
	return [game_on + 2, 221];
}




